function [averageFitnessEachStep] = generateFitnessAgainstGenerationsVaryingTMatrix(generations, ...
                                                 trialsPerStep, ...
                                                 populationSize, ...
                                                 projectionHeight, ...
                                                 projectionWidth, ...
                                                 initialMutationSparsity, ...
                                                 finalMutationSparsity, ...
                                                 decayFactor, ...
                                                 transmissionMatrix, ...
                                                 TMatrixMutationSpan)
% not going to work
    fitness = zeros(trialsPerStep, generations);
    for trial = 1:trialsPerStep
        if mutationTimer == 0
            transmissionMatrix = transmissionMatrix + sprand(projectionHeight, projectionWidth, 0.5);
            mutationTimer = TMatrixMutationSpan;
        end
        [~, fitnessAtEachStep]= geneticAlgorithm(generations, ...
                                         populationSize, ...
                                         projectionHeight, ...
                                         projectionWidth, ...
                                         initialMutationSparsity, ...
                                         finalMutationSparsity, ...
                                         decayFactor, ...
                                         transmissionMatrix);

        fitness(trial, :) = fitnessAtEachStep;
        mutationTimer = mutationTimer - 1;
    end
    averageFitnessEachStep = mean(fitness);
end
