function [averageFitnessEachStep] = generateFitnessAgainstGenerations(generations, ...
                                                 trialsPerStep, ...
                                                 populationSize, ...
                                                 projectionHeight, ...
                                                 projectionWidth, ...
                                                 initialMutationSparsity, ...
                                                 finalMutationSparsity, ...
                                                 decayFactor, ...
                                                 transmissionMatrix)

    fitness = zeros(trialsPerStep, generations);
    for trial = 1:trialsPerStep
       [~, fitnessAtEachStep]= geneticAlgorithm(generations, ...
                                         populationSize, ...
                                         projectionHeight, ...
                                         projectionWidth, ...
                                         initialMutationSparsity, ...
                                         finalMutationSparsity, ...
                                         decayFactor, ...
                                         transmissionMatrix);

       fitness(trial, :) = fitnessAtEachStep;
    end
    averageFitnessEachStep = mean(fitness);
end
